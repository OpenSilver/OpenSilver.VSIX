{
  "$schema": "http://json.schemastore.org/template",
  "author": "Userware",
  "classifications": [ "Web", "Desktop", "OpenSilver", "Xaml", "F#" ],
  "identity": "OpensilverApplicationFS",
  "groupIdentity": "OpenSilverApplication",
  "name": "OpenSilver Web Application",
  "shortName": "opensilverapp",
  "sourceName": "OpenSilverApplication",
  "description": "Template for creating an F# OpenSilver Web Application.",
  "tags": {
    "language": "F#",
    "type": "solution"
  },
  "constraints": {
    "sdk-only": {
      "type": "host",
      "args": [
        {
          "hostname": "dotnetcli",
          "version": "[7.0,)"
        }
      ]
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(operatingSystem != 'Windows_NT')",
          "exclude": [
            "OpenSilverApplication.Simulator/**"
          ]
        },
        {
          "condition": "(mauiPlatformsBasic == '' && windowsTarget == '')",
          "exclude": [
            "OpenSilverApplication.MauiHybrid/**"
          ]
        }
      ]
    }
  ],
  "primaryOutputs": [
    { "path": "./OpenSilverApplication/OpenSilverApplication.fsproj" },
    { "path": "./OpenSilverApplication.Browser/OpenSilverApplication.Browser.csproj" },
    {
      "path": "./OpenSilverApplication.Simulator/OpenSilverApplication.Simulator.csproj",
      "condition": "(operatingSystem == 'Windows_NT')"
    },
    {
      "path": "./OpenSilverApplication.MauiHybrid/OpenSilverApplication.MauiHybrid.csproj",
      "condition": "(mauiPlatformsBasic != '' || windowsTarget != '')"
    }
  ],
  "symbols": {
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "targetFramework": {
      "type": "parameter",
      "datatype": "string",
      "description": "Sets the target .NET framework, must be net7.0, net8.0 or net9.0",
      "defaultValue": "net9.0",
      "replaces": "net9.0",
      "choices": [
        {
          "choice": "net7.0",
          "description": "Use .NET 7.0"
        },
        {
          "choice": "net8.0",
          "description": "Use .NET 8.0"
        },
        {
          "choice": "net9.0",
          "description": "Use .NET 9.0"
        }
      ]
    },
    "theme": {
      "type": "parameter",
      "datatype": "string",
      "description": "Specifies the theme for the generated OpenSilver application.",
      "defaultValue": "classic",
      "choices": [
        {
          "choice": "classic",
          "description": "Classic theme"
        },
        {
          "choice": "modern-light",
          "description": "Modern theme with light mode"
        },
        {
          "choice": "modern-dark",
          "description": "Modern theme with dark mode"
        }
      ]
    },
    "mauiPlatforms": {
      "type": "parameter",
      "datatype": "choice",
      "description": "Specifies which MAUI platforms to include.",
      "allowMultipleValues": true,
      "replaces": "$maui-platforms$",
      "choices": [
        {
          "choice": "android",
          "description": "Android"
        },
        {
          "choice": "ios",
          "description": "iOS"
        },
        {
          "choice": "macos",
          "description": "macOS"
        },
        {
          "choice": "windows",
          "description": "Windows"
        },
        {
          "choice": "all",
          "description": "All supported platforms"
        }
      ]
    },

    "langShortCode": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$LangShortCode$",
      "parameters": {
        "value": "fs"
      }
    },
    "openSilverPackageVersion": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$OpenSilverPackageVersion$",
      "parameters": {
        "value": "3.1.2"
      }
    },
    "openSilverSimulatorPackageVersion": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$OpenSilverSimulatorPackageVersion$",
      "parameters": {
        "value": "3.1.2"
      }
    },
    "openSilverWebAssemblyPackageVersion": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$OpenSilverWebAssemblyPackageVersion$",
      "parameters": {
        "value": "3.1.2"
      }
    },
    "modernThemePackageVersion": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$ModernThemePackageVersion$",
      "parameters": {
        "value": "3.1.*"
      }
    },
    "openSilverMauiHybridPackageVersion": {
      "type": "generated",
      "generator": "constant",
      "replaces": "$OpenSilverMauiHybridPackageVersion$",
      "parameters": {
        "value": "3.1.2"
      }
    },
    "webAssemblyPackageVersion": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "replaces": "$WebAssemblyPackageVersion$",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "(targetFramework == 'net7.0')",
            "value": "7.0.0"
          },
          {
            "condition": "(targetFramework == 'net8.0')",
            "value": "8.0.11"
          },
          {
            "condition": "(targetFramework == 'net9.0')",
            "value": "9.0.0"
          }
        ]
      }
    },
    "pageForeground": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "replaces": "$PageForeground$",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "(theme == 'classic')",
            "value": "Black"
          },
          {
            "condition": "(theme != 'classic')",
            "value": "{DynamicResource Theme_TextBrush}"
          }
        ]
      }
    },
    "gridBackground": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "replaces": "$GridBackground$",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "(theme == 'classic')",
            "value": "White"
          },
          {
            "condition": "(theme != 'classic')",
            "value": "{DynamicResource Theme_BackgroundBrush}"
          }
        ]
      }
    },
    "operatingSystem": {
      "type": "bind",
      "binding": "env:OS",
      "defaultValue": ""
    },
    "androidTarget": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "((mauiPlatforms == 'android' || mauiPlatforms == 'all') && targetFramework == 'net8.0')",
            "value": "net8.0-android"
          },
          {
            "condition": "((mauiPlatforms == 'android' || mauiPlatforms == 'all') && targetFramework == 'net9.0')",
            "value": "net9.0-android"
          }
        ]
      }
    },
    "iosTarget": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "((mauiPlatforms == 'ios' || mauiPlatforms == 'all') && targetFramework == 'net8.0')",
            "value": "net8.0-ios"
          },
          {
            "condition": "((mauiPlatforms == 'ios' || mauiPlatforms == 'all') && targetFramework == 'net9.0')",
            "value": "net9.0-ios"
          }
        ]
      }
    },
    "macosTarget": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "((mauiPlatforms == 'macos' || mauiPlatforms == 'all') && targetFramework == 'net8.0')",
            "value": "net8.0-maccatalyst"
          },
          {
            "condition": "((mauiPlatforms == 'macos' || mauiPlatforms == 'all') && targetFramework == 'net9.0')",
            "value": "net9.0-maccatalyst"
          }
        ]
      }
    },
    "windowsTarget": {
      "type": "generated",
      "generator": "switch",
      "datatype": "string",
      "replaces": "$WindowsTarget$",
      "parameters": {
        "evaluator": "C++",
        "cases": [
          {
            "condition": "((mauiPlatforms == 'windows' || mauiPlatforms == 'all') && targetFramework == 'net8.0')",
            "value": "net8.0-windows10.0.19041.0"
          },
          {
            "condition": "((mauiPlatforms == 'windows' || mauiPlatforms == 'all') && targetFramework == 'net9.0')",
            "value": "net9.0-windows10.0.19041.0"
          }
        ]
      }
    },
    "mauiPlatformsBasic": {
      "type": "generated",
      "generator": "join",
      "replaces": "$MauiPlatformsBasic$",
      "parameters": {
        "symbols": [
          {
            "type": "ref",
            "value": "androidTarget"
          },
          {
            "type": "ref",
            "value": "iosTarget"
          },
          {
            "type": "ref",
            "value": "macosTarget"
          }
        ],
        "removeEmptyValues": true,
        "separator": ";"
      }
    }

  },
  "guids": [
    "79254849-EE14-42B2-82CB-07A7D4FA3205",
    "052AA0E1-BF65-4EE4-B6D3-112AE3350154",
    "E5006009-F128-4902-AD10-D55E7942946A",
    "D59E1426-E892-4863-9C68-E437124A32F5",
    "E98BBAFF-DE97-48FB-B99E-019727405EFE"
  ],
  "postActions": [
    {
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [
        {
          "text": "Run 'dotnet restore'"
        }
      ],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ]
}
